name: dotnet
base: core22
version: 8.0.7
summary: .NET CLI tools, SDK and runtime
description: |
  .NET is the free, open-source, cross-platform framework for building modern
  apps and powerful cloud services that work on Android, iOS, GNU/Linux, macOS
  and Windows.
  .
  This Snap also includes a powerful installer tool that allows you to manage
  your .NET installation and gives you the possibility to install as many
  multiple versions of .NET side-by-side as you want, as well as receive
  monthly security and feature updates whenever they become available.

grade: devel # must be 'stable' to release into candidate/stable channels
confinement: classic

#package-repositories:
# - type: apt
#   ppa: dotnet/snaps
#   priority: always

parts:
  pre-reqs:
    plugin: nil
    build-attributes:
      - enable-patchelf
    stage-packages:
      - libc6
      - libgcc-s1
      - libgssapi-krb5-2
      - libicu70
      - liblttng-ust1
      - libssl3
      - libstdc++6
      - libunwind8
      - python3.10-minimal
      - zlib1g

  dotnet-installer:
    plugin: dump
    source: .
    build-packages:
      - dotnet-sdk-8.0
    # build-attributes:
    #   - enable-patchelf
    # stage-packages:
    #   - liblttng-ust1
    #   - libicu70
    #   - libssl3
    override-build: |
      /usr/bin/dotnet --info
      
      if [ "${CRAFT_ARCH_BUILD_FOR}" = "amd64" ]; then
        RUNTIME_RID="linux-x64"
      elif [ "${CRAFT_ARCH_BUILD_FOR}" = "arm64" ]; then
        RUNTIME_RID="linux-arm64"
      else
        echo "Unknown architecture (${CRAFT_ARCH_BUILD_FOR})"
        exit 1
      fi

      /usr/bin/dotnet publish src/Dotnet.Installer.Console --output "${SNAPCRAFT_PART_INSTALL}" \
        --configuration Release -r "${RUNTIME_RID}" -p:DebugSymbols=false -p:DebugType=none
      chmod 555 "${SNAPCRAFT_PART_INSTALL}/Dotnet.Installer.Console"
      
      craftctl default
    override-stage: |
      craftctl default
      patchelf --set-interpreter /snap/dotnet/current/lib64/ld-linux-x86-64.so.2 Dotnet.Installer.Console
      patchelf --force-rpath --set-rpath \$ORIGIN/netcoredeps:/snap/dotnet/current/usr/lib/x86_64-linux-gnu Dotnet.Installer.Console
    prime:
      - Dotnet.Installer.Console
      - Configuration/*
      - Scripts/*

  dotnet-host:
    plugin: nil
    # build-attributes:
    #   - enable-patchelf
    build-packages:
      - patchelf
    stage-packages:
      - dotnet-hostfxr-8.0
    override-stage: |
      craftctl default
      DOTNET_VERSION=$(craftctl get version)
      patchelf --set-interpreter /snap/dotnet/current/lib64/ld-linux-x86-64.so.2 usr/lib/dotnet/dotnet
      patchelf --force-rpath --set-rpath /snap/dotnet/current/usr/lib/x86_64-linux-gnu usr/lib/dotnet/dotnet
      patchelf --force-rpath --set-rpath /snap/dotnet/current/usr/lib/x86_64-linux-gnu usr/lib/dotnet/host/fxr/${DOTNET_VERSION}/libhostfxr.so

  netstandard-targeting-pack:
    plugin: nil
    stage-packages:
      - netstandard-targeting-pack-2.1-8.0

apps:
  dotnet:
    command: usr/bin/python3.10 $SNAP/Scripts/dotnet-launcher.py
    environment:
      DOTNET_INSTALL_DIR: $SNAP_COMMON/dotnet
      # LD_LIBRARY_PATH: $LD_LIBRARY_PATH:$SNAP/usr/lib/x86_64-linux-gnu
