#!/usr/bin/env bash

set -euxo pipefail

#####################################
# Transition to non-root components #
#####################################

# Remove remaining systemd-mount units from the system
find /usr/lib/systemd/system/ -type f -name 'var-snap-dotnet-common-dotnet-*.mount' | while read -r file; do
    unit_name=$(echo "$file" | rev | cut -d / -f 1 | rev)
    systemctl stop "$unit_name"
    systemctl disable "$unit_name"
    rm "$file"
done

# Remove remaining systemd-path units from the system
find /usr/lib/systemd/system/ -type f -name 'dotnet-*-update-watcher.*' | while read -r file; do
    unit_name=$(echo "$file" | rev | cut -d / -f 1 | rev)
    systemctl stop "$unit_name"
    systemctl disable "$unit_name"
    rm "$file"
done

find /usr/lib/systemd/system/ -type f -name 'aspnetcore-*-update-watcher.*' | while read -r file; do
    unit_name=$(echo "$file" | rev | cut -d / -f 1 | rev)
    systemctl stop "$unit_name"
    systemctl disable "$unit_name"
    rm "$file"
done

systemctl daemon-reload

rm -rf "$SNAP_COMMON"/snap
rm -rf "$SNAP_COMMON"/dotnet

# Create .NET installation directory
mkdir --parents "$SNAP_COMMON"/dotnet
# Create snap configuration directory
mkdir --parents "$SNAP_COMMON"/snap

# Create an empty local manifest file if it doesn't yet exist.
if [ ! -e "$SNAP_COMMON"/snap/manifest.json ]; then
    echo "[ ]" > "$SNAP_COMMON"/snap/manifest.json
fi

# Copy latest host to $SNAP_COMMON
cp --recursive --dereference --preserve=mode,ownership,timestamps "$SNAP"/usr/lib/dotnet "$SNAP_COMMON"
